<launch>
<!-- Arguments -->
	<!-- Gazebo stuff -->
		<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
		<arg name="x_pos" default="0.40"/>
		<arg name="y_pos" default="0.4"/>
		<arg name="z_pos" default="0.05"/>
		<arg name="maze"  default="maze2" />
	<!-- Rviz stuff -->
		<arg name="scan_topic"     default="scan"/>
		<arg name="initial_pose_x" default="0.0"/>
		<arg name="initial_pose_y" default="0.0"/>
		<arg name="initial_pose_a" default="0.0"/>
	<!-- Gmapping -->
		<arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
		<arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
		<arg name="set_base_frame" default="base_footprint"/>
		<arg name="set_odom_frame" default="odom"/>
		<arg name="set_map_frame"  default="map"/>

<!-- TF -->
	<node pkg="tf" type="static_transform_publisher" name="camera_tf" args="-1.95 -0.55 2.0 -1.58 0 -1.58 /odom /camera_link 100"/>

<!-- TurtleBot stuff and Gazibo -->
	<env name="GAZEBO_MODEL_PATH" value="$(find RBE3002_template)/models:$(optenv GAZEBO_MODEL_PATH"/>
	<include file="$(find rbe3002-turtlebot)/launch/turtlebot3002_world.launch">
		<arg name="world_name" value="$(find RBE3002_template)/worlds/$(arg maze).world"/>
		<arg name="x_pos" default="$(arg x_pos)"/>
		<arg name="y_pos" default="$(arg y_pos)"/>
		<arg name="z_pos" default="$(arg z_pos)"/>
		<peram name="output" value="log"/>
	</include>

<!-- RVIZ LAUNCH -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find final_rbe3002)/rviz/final_rbe.rviz"/>

<!-- Gmapping -->
	<node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="log">
		<param name="base_frame" value="$(arg set_base_frame)"/>
		<param name="odom_frame" value="$(arg set_odom_frame)"/>
		<param name="map_frame"  value="$(arg set_map_frame)"/>
		<rosparam command="load" file="$(find final_rbe3002)/config/gmapping_params.yaml" />
	</node>

<!-- TurtleBot3 -->
	<include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
		<arg name="model" value="$(arg model)" />
	</include>

<!-- AMCL -->
	<node pkg="amcl" type="amcl" name="amcl">
		<param name="~selective_resampling"  value="false" />
		<param name="~use_map_topic"  value="false" />
		<param name="~tf_broadcast"  value="false" />
		<param name="odom_frame_id"  value="odom" />

		<param name="min_particles"             value="500"/>
		<param name="max_particles"             value="3000"/>
		<param name="kld_err"                   value="0.02"/>
		<param name="update_min_d"              value="0.002"/>
		<param name="update_min_a"              value="0.002"/>
		<param name="resample_interval"         value="1"/>
		<param name="transform_tolerance"       value="0.01"/>
		<param name="recovery_alpha_slow"       value="0.00"/>
		<param name="recovery_alpha_fast"       value="0.100"/>
		<param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
		<param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
		<param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
		<param name="gui_publish_rate"          value="50.0"/>

		<remap from="scan"                      to="$(arg scan_topic)"/>
		<param name="laser_max_range"           value="3.5"/>
		<param name="laser_max_beams"           value="180"/>
		<param name="laser_z_hit"               value="0.5"/>
		<param name="laser_z_short"             value="0.05"/>
		<param name="laser_z_max"               value="0.05"/>
		<param name="laser_z_rand"              value="0.5"/>
		<param name="laser_sigma_hit"           value="0.2"/>
		<param name="laser_lambda_short"        value="0.1"/>
		<param name="laser_likelihood_max_dist" value="2.0"/>
		<param name="laser_model_type"          value="likelihood_field"/>

		<param name="odom_model_type"           value="diff-corrected"/>
		<param name="odom_alpha1"               value="0.1"/>
		<param name="odom_alpha2"               value="0.1"/>
		<param name="odom_alpha3"               value="0.1"/>
		<param name="odom_alpha4"               value="0.1"/>
		<param name="odom_frame_id"             value="odom"/>
		<param name="base_frame_id"             value="base_footprint"/>

	</node>
  
<!-- Robot control node -->
	<node pkg="final_rbe3002" type="robot_controller_lab4.py" name="robot_controller_lab4" output="screen"/> 

<!-- Path Controller node -->
	<node name="path_controller" pkg="final_rbe3002" type="path_controller.py" output="log"/> 

<!-- Path Controller node -->
	<node name="frontier_explorer" pkg="final_rbe3002" type="frontier_explorer.py" output="log"/>

<!-- Path Planner node -->
	<node name="path_planner" pkg="final_rbe3002" type="path_planner.py" output="screen"/>

<!-- Map converter node -->
	<node name="map_converter" pkg="final_rbe3002" type="map_converter.py" output="log"/>

</launch>
